#변수 조합해서 파생변수 만들기
df<-data.frame(var1=c(4,3,8),
               var2=c(2,6,1))
df
df$var_sum<-df$var1+df$var2
df
df$var_mean<-(df$var1+df$var2)/2
df

#mpg통합 연비변수만들기
library(ggplot2)
mpg<-as.data.frame(ggplot2::mpg)
mpg$total<-(mpg$cty+mpg$hwy)/2
head(mpg)
mean(mpg$total)

#조건문 활용해서 파생변수 만들기
summary(mpg$total)
hist(mpg$total)
mpg$test<-ifelse(mpg$total>=20,"pass","fail")
head(mpg,20)
table(mpg$test)
library(ggplot2)
qplot(mpg$test)

#중첩조건문 활용하기
mpg$grade<-ifelse(mpg$total>=30,"A",
                  ifelse(mpg$total>=20,"B","C"))
head(mpg,20)
table(mpg$grade)

#자유자재로 데이터 가공하기
library(dplyr)
exam<-read.csv("csv_exam.csv")
exam
exam %>% filter(class==1)
exam %>% filter(class==2)
exam %>% filter(class!=1)
exam %>% filter(math>50)
exam %>% filter(class==1&math>=50)
exam %>% filter(math>=90|english>=90)
exam %>% filter(class==1|class==3|class==5)
exam %>% filter(class%in%c(1,3,5))

class1<-exam %>% filter(class==1)
class2<-exam %>% filter(class==2)
mean(class1$math)
mean(class2$math)

##데이터추출-혼자서 해보기
# Q1.
displ4<-mpg %>%filter(displ<=4) 
displ5<-mpg %>% filter(displ>=5)
mean(displ4$hwy)
mean(displ5$hwy)

#Q2.
audi<-mpg %>% filter(manufacturer=="audi")
toyota<-mpg %>% filter(manufacturer=="toyota")
mean(audi$cty)
mean(toyota$cty)

#Q3.
hwy_mean<-mpg %>% filter(manufacturer=="chevrolet"|manufacturer=="ford"|manufacturer=="honda")
mean(hwy_mean$hwy)


#필요한 변수만 추출
exam %>% select(math)
exam %>% select(class,math,english)
exam %>% select(-math)

#dplyr함수 조합하기
exam %>% filter(class==1) %>% select(english)
exam %>% 
  select(id,math) %>% 
  head

##혼자서 해보기
#Q1.
new_mpg<-mpg %>% select(class,cty)
head(new_mpg)

#Q2.
suv<-mpg %>% filter(class=="suv")
compact<-mpg %>% filter(class=="compact")
mean(suv$cty)
mean(compact$cty)


#순서대로 정렬하기
exam %>% arrange(math)
exam %>% arrange(desc(math))
exam %>% arrange(class,math)

##혼자해보기
Self<-as.data.frame(ggplot2::mpg)

Self%>% filter(class=="audi") %>% arrange(desc(hwy)) %>% head(5)

#파생변수 추가하기
exam %>% 
  mutate(total=math+english+science) %>% 
  head
exam %>% 
  mutate(total=math+english+science,
         mean=(math+english+science)/3) %>% head
exam %>% 
  mutate(total=math+english+science) %>% 
  arrange(total) %>% head

##혼자서해보기
#Q1.
MPG<-as.data.frame(ggplot2::mpg)

MPG<-MPG%>% mutate(total=cty+hwy)

#Q2
MPG<-MPG%>% mutate(total/2)

#Q3
MPG %>% arrange(desc(mean)) %>% head(3)

#Q4
mpg %>% mutate(total=cty+hwy,
               mean=total/2) %>% 
  arrange(desc(mean)) %>% head(3)

#집단별로 요약하기
exam %>% summarise(mean_math=mean(math))

exam %>% 
  group_by(class) %>% 
  summarise(mean_math=mean(math))

exam %>% 
  group_by(class) %>% 
  summarise(mean_math=mean(math),
            sum_math=sum(math),
            median_math=median(math),
            n=n())

mpg %>% 
  group_by(manufacturer,drv) %>% 
  summarise(mean_cty=mean(cty)) %>% head(10)


mpg %>% 
  group_by(manufacturer) %>% 
  filter(class=="suv") %>% 
  mutate(tot=(cty+hwy)/2) %>% 
  summarise(mean_tot=mean(tot)) %>% 
  arrange(desc(mean_tot)) %>% head(5)

#혼자서해보기
#Q1
mpg %>% group_by(class) %>% 
  summarise(mean_cty=mean(cty))

#Q2
mpg %>% group_by(class) %>% 
  summarise(mean_cty=mean(cty)) %>% 
  arrange(desc(mean_cty))

#Q3
mpg %>% group_by(manufacturer) %>% 
  summarise(mean_hwy=mean(hwy)) %>% 
  arrange(desc(mean_hwy)) %>%
  head(3)

#Q4
mpg %>% group_by(manufacturer) %>% 
  filter(class=="compact") %>% 
  summarise(N=n()) %>% 
  arrange(desc(N))
